{"version":3,"sources":["Components/TransferLearning/TransferLearning.types.ts","Components/TransferLearning/TransferLearning.tsx","models/imagenet/index.ts","Components/ImageClassification/ImageClassification.tsx","App.tsx","index.tsx"],"names":["BTN_TYPES","Group","Button","TransferLearning","video","model","trainingClassNum","mobilenet","classifier","videoLabel","state","loading","trainingExamples","trainExamplCounter","actionBtn","add","handleLoadingMode","setState","handleActionBtn","e","target","value","onAddClick","onTrainClick","props","train","onTrainExamples","onSingleExampleTrain","index","addImage","counter","push","key","loss","console","log","classify","onResultsReady","err","results","label","String","toUpperCase","getTLLabel","renderTrainingExamples","Search","examples","i","disabled","placeholder","enterButton","onSearch","this","id","className","size","indicator","type","onChange","onClick","length","Component","imageNetClasses","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","MobileNet","ImageClassification","selectedModel","file","pickedImage","componentDidMount","onLoadModel","a","async","tf","onUploadImg","event","URL","createObjectURL","files","document","getElementById","message","success","onPredictClick","tensor","preprocessImage","predict","data","prediction","descSortResults","sort","b","probability","getMostProbableResults","slice","mappedPredictionResults","Array","from","map","p","mapClassesToResults","sortedPredictionResults","mostProbableResults","renderResultsInformation","result","toFixed","toLocaleUpperCase","resizeNearestNeighbor","toFloat","offset","sub","div","expandDims","style","marginRight","Option","src","alt","MODELS","imageClassification","objectDetection","transferLearning","Header","Content","Footer","p5","p5Lib","MainApp","width","height","objects","tlLabel","setup","remove","createCanvas","parent","createCapture","VIDEO","ml5","onObjectDetect","numLabels","onTLModelReady","classification","draw","drawODLabel","drawTLLabel","image","xTextPosition","x","yTextPosition","y","rectX","rectY","rectWidth","w","rectHeight","h","fill","noStroke","text","noFill","strokeWeight","textSize","stroke","rect","getModels","component","detect","onModelSelect","models","theme","mode","lineHeight","textAlign","Object","keys","Item","display","alignItems","flexDirection","ReactDOM","render"],"mappings":"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","file":"static/js/main.6e8f8185.chunk.js","sourcesContent":["export type Props = {\n  p5Lib: any,\n  classifier: any,\n  getTLLabel: (label: string) => void;\n};\nexport type State = {\n  loading: boolean,\n  actionBtn: string,\n  trainExamplCounter: number,\n  trainingExamples: {\n    key: string,\n    counter: number\n  }[]\n};\n\nexport enum BTN_TYPES {\n  add = 'add',\n  train = 'train'\n};","import React, { Component } from 'react';\nimport { Input, Radio, Spin, Icon } from 'antd';\nimport { RadioChangeEvent } from 'antd/lib/radio';\n\nimport { Props, State, BTN_TYPES } from './TransferLearning.types';\n\nconst { Group, Button } = Radio;\n\nexport class TransferLearning extends Component<Props, State> {\n  video: any = null;\n  model = 'MobileNet';\n  trainingClassNum = 3;\n  mobilenet: any = null;\n  classifier: any = null;\n  videoLabel: string | null = null;\n\n  state: State = {\n    loading: false,\n    trainingExamples: [],\n    trainExamplCounter: 0,\n    actionBtn: BTN_TYPES.add\n  };\n\n  componentWillUnmount() {\n    this.video = null;\n  }\n\n  // EVENT HANDLERS\n  handleLoadingMode = (loading: boolean) => this.setState({ loading });\n  handleActionBtn = (e: RadioChangeEvent) =>\n    this.setState({ actionBtn: e.target.value });\n  onAddClick = () =>\n    this.setState({ trainExamplCounter: this.state.trainExamplCounter + 1 });\n  onTrainClick = () => {\n    this.handleLoadingMode(true);\n    this.props.classifier.train(this.onTrainExamples);\n  };\n\n  onSingleExampleTrain = (value: string, index: number) => {\n    const { trainingExamples } = this.state;\n    // single training\n    this.props.classifier.addImage(value);\n\n    // UI stuff\n    if (trainingExamples[index]) {\n      trainingExamples[index].counter += 1;\n    } else {\n      trainingExamples.push({ key: value, counter: 1 });\n    }\n\n    this.setState({ trainingExamples });\n  };\n\n  // TRAINING\n  onTrainExamples = (loss: number | null) => {\n    if (loss === null) {\n      this.handleLoadingMode(false);\n      console.log('Trainning is completed !!!');\n\n      this.props.classifier.classify(this.onResultsReady);\n    } else {\n      console.log('Loss value:', loss);\n    }\n  };\n\n  onResultsReady = (\n    err: string,\n    results: { [k: string]: string | number }[]\n  ) => {\n    if (err) {\n      console.log(err);\n    } else {\n      // UI stuff\n      const label = String(results[0].label).toUpperCase();\n      this.props.getTLLabel(label);\n\n      // looping training\n      this.props.classifier.classify(this.onResultsReady);\n      this.setState({ trainingExamples: [] });\n    }\n  };\n\n  // UI STUFF\n  renderTrainingExamples = () => {\n    const { Search } = Input;\n    const { trainingExamples, trainExamplCounter, loading } = this.state;\n\n    const examples = [];\n\n    for (let i = 0; i < trainExamplCounter; i++) {\n      const counter = trainingExamples[i] ? trainingExamples[i].counter : null;\n\n      examples.push(\n        <Search\n          key={i}\n          disabled={loading}\n          placeholder='Train expample'\n          enterButton={`+ ${counter || 0}`}\n          onSearch={(value: string) => this.onSingleExampleTrain(value, i)}\n        />\n      );\n    }\n\n    return <>{examples}</>;\n  };\n\n  render() {\n    const { loading, trainingExamples } = this.state;\n\n    return (\n      <div id='tl-wrapper'>\n        <div className='flex m'>\n          {loading && (\n            <div className='m'>\n              <Spin size='large' indicator={<Icon type='loading' />} />\n            </div>\n          )}\n          <Group value={this.state.actionBtn} onChange={this.handleActionBtn}>\n            <Button\n              disabled={loading}\n              value={BTN_TYPES.add}\n              onClick={this.onAddClick}\n            >\n              Add\n            </Button>\n            <Button\n              disabled={loading || !trainingExamples.length}\n              value={BTN_TYPES.train}\n              onClick={this.onTrainClick}\n            >\n              Train\n            </Button>\n          </Group>\n          {this.renderTrainingExamples()}\n        </div>\n      </div>\n    );\n  }\n}\n","export const imageNetClasses = {\n  0: 'tench, Tinca tinca',\n  1: 'goldfish, Carassius auratus',\n  2: 'great white shark, white shark, man-eater, man-eating shark, Carcharodon carcharias',\n  3: 'tiger shark, Galeocerdo cuvieri',\n  4: 'hammerhead, hammerhead shark',\n  5: 'electric ray, crampfish, numbfish, torpedo',\n  6: 'stingray',\n  7: 'cock',\n  8: 'hen',\n  9: 'ostrich, Struthio camelus',\n  10: 'brambling, Fringilla montifringilla',\n  11: 'goldfinch, Carduelis carduelis',\n  12: 'house finch, linnet, Carpodacus mexicanus',\n  13: 'junco, snowbird',\n  14: 'indigo bunting, indigo finch, indigo bird, Passerina cyanea',\n  15: 'robin, American robin, Turdus migratorius',\n  16: 'bulbul',\n  17: 'jay',\n  18: 'magpie',\n  19: 'chickadee',\n  20: 'water ouzel, dipper',\n  21: 'kite',\n  22: 'bald eagle, American eagle, Haliaeetus leucocephalus',\n  23: 'vulture',\n  24: 'great grey owl, great gray owl, Strix nebulosa',\n  25: 'European fire salamander, Salamandra salamandra',\n  26: 'common newt, Triturus vulgaris',\n  27: 'eft',\n  28: 'spotted salamander, Ambystoma maculatum',\n  29: 'axolotl, mud puppy, Ambystoma mexicanum',\n  30: 'bullfrog, Rana catesbeiana',\n  31: 'tree frog, tree-frog',\n  32: 'tailed frog, bell toad, ribbed toad, tailed toad, Ascaphus trui',\n  33: 'loggerhead, loggerhead turtle, Caretta caretta',\n  34: 'leatherback turtle, leatherback, leathery turtle, Dermochelys coriacea',\n  35: 'mud turtle',\n  36: 'terrapin',\n  37: 'box turtle, box tortoise',\n  38: 'banded gecko',\n  39: 'common iguana, iguana, Iguana iguana',\n  40: 'American chameleon, anole, Anolis carolinensis',\n  41: 'whiptail, whiptail lizard',\n  42: 'agama',\n  43: 'frilled lizard, Chlamydosaurus kingi',\n  44: 'alligator lizard',\n  45: 'Gila monster, Heloderma suspectum',\n  46: 'green lizard, Lacerta viridis',\n  47: 'African chameleon, Chamaeleo chamaeleon',\n  48: 'Komodo dragon, Komodo lizard, dragon lizard, giant lizard, Varanus komodoensis',\n  49: 'African crocodile, Nile crocodile, Crocodylus niloticus',\n  50: 'American alligator, Alligator mississipiensis',\n  51: 'triceratops',\n  52: 'thunder snake, worm snake, Carphophis amoenus',\n  53: 'ringneck snake, ring-necked snake, ring snake',\n  54: 'hognose snake, puff adder, sand viper',\n  55: 'green snake, grass snake',\n  56: 'king snake, kingsnake',\n  57: 'garter snake, grass snake',\n  58: 'water snake',\n  59: 'vine snake',\n  60: 'night snake, Hypsiglena torquata',\n  61: 'boa constrictor, Constrictor constrictor',\n  62: 'rock python, rock snake, Python sebae',\n  63: 'Indian cobra, Naja naja',\n  64: 'green mamba',\n  65: 'sea snake',\n  66: 'horned viper, cerastes, sand viper, horned asp, Cerastes cornutus',\n  67: 'diamondback, diamondback rattlesnake, Crotalus adamanteus',\n  68: 'sidewinder, horned rattlesnake, Crotalus cerastes',\n  69: 'trilobite',\n  70: 'harvestman, daddy longlegs, Phalangium opilio',\n  71: 'scorpion',\n  72: 'black and gold garden spider, Argiope aurantia',\n  73: 'barn spider, Araneus cavaticus',\n  74: 'garden spider, Aranea diademata',\n  75: 'black widow, Latrodectus mactans',\n  76: 'tarantula',\n  77: 'wolf spider, hunting spider',\n  78: 'tick',\n  79: 'centipede',\n  80: 'black grouse',\n  81: 'ptarmigan',\n  82: 'ruffed grouse, partridge, Bonasa umbellus',\n  83: 'prairie chicken, prairie grouse, prairie fowl',\n  84: 'peacock',\n  85: 'quail',\n  86: 'partridge',\n  87: 'African grey, African gray, Psittacus erithacus',\n  88: 'macaw',\n  89: 'sulphur-crested cockatoo, Kakatoe galerita, Cacatua galerita',\n  90: 'lorikeet',\n  91: 'coucal',\n  92: 'bee eater',\n  93: 'hornbill',\n  94: 'hummingbird',\n  95: 'jacamar',\n  96: 'toucan',\n  97: 'drake',\n  98: 'red-breasted merganser, Mergus serrator',\n  99: 'goose',\n  100: 'black swan, Cygnus atratus',\n  101: 'tusker',\n  102: 'echidna, spiny anteater, anteater',\n  103: 'platypus, duckbill, duckbilled platypus, duck-billed platypus, Ornithorhynchus anatinus',\n  104: 'wallaby, brush kangaroo',\n  105: 'koala, koala bear, kangaroo bear, native bear, Phascolarctos cinereus',\n  106: 'wombat',\n  107: 'jellyfish',\n  108: 'sea anemone, anemone',\n  109: 'brain coral',\n  110: 'flatworm, platyhelminth',\n  111: 'nematode, nematode worm, roundworm',\n  112: 'conch',\n  113: 'snail',\n  114: 'slug',\n  115: 'sea slug, nudibranch',\n  116: 'chiton, coat-of-mail shell, sea cradle, polyplacophore',\n  117: 'chambered nautilus, pearly nautilus, nautilus',\n  118: 'Dungeness crab, Cancer magister',\n  119: 'rock crab, Cancer irroratus',\n  120: 'fiddler crab',\n  121: 'king crab, Alaska crab, Alaskan king crab, Alaska king crab, Paralithodes camtschatica',\n  122: 'American lobster, Northern lobster, Maine lobster, Homarus americanus',\n  123: 'spiny lobster, langouste, rock lobster, crawfish, crayfish, sea crawfish',\n  124: 'crayfish, crawfish, crawdad, crawdaddy',\n  125: 'hermit crab',\n  126: 'isopod',\n  127: 'white stork, Ciconia ciconia',\n  128: 'black stork, Ciconia nigra',\n  129: 'spoonbill',\n  130: 'flamingo',\n  131: 'little blue heron, Egretta caerulea',\n  132: 'American egret, great white heron, Egretta albus',\n  133: 'bittern',\n  134: 'crane',\n  135: 'limpkin, Aramus pictus',\n  136: 'European gallinule, Porphyrio porphyrio',\n  137: 'American coot, marsh hen, mud hen, water hen, Fulica americana',\n  138: 'bustard',\n  139: 'ruddy turnstone, Arenaria interpres',\n  140: 'red-backed sandpiper, dunlin, Erolia alpina',\n  141: 'redshank, Tringa totanus',\n  142: 'dowitcher',\n  143: 'oystercatcher, oyster catcher',\n  144: 'pelican',\n  145: 'king penguin, Aptenodytes patagonica',\n  146: 'albatross, mollymawk',\n  147: 'grey whale, gray whale, devilfish, Eschrichtius gibbosus, Eschrichtius robustus',\n  148: 'killer whale, killer, orca, grampus, sea wolf, Orcinus orca',\n  149: 'dugong, Dugong dugon',\n  150: 'sea lion',\n  151: 'Chihuahua',\n  152: 'Japanese spaniel',\n  153: 'Maltese dog, Maltese terrier, Maltese',\n  154: 'Pekinese, Pekingese, Peke',\n  155: 'Shih-Tzu',\n  156: 'Blenheim spaniel',\n  157: 'papillon',\n  158: 'toy terrier',\n  159: 'Rhodesian ridgeback',\n  160: 'Afghan hound, Afghan',\n  161: 'basset, basset hound',\n  162: 'beagle',\n  163: 'bloodhound, sleuthhound',\n  164: 'bluetick',\n  165: 'black-and-tan coonhound',\n  166: 'Walker hound, Walker foxhound',\n  167: 'English foxhound',\n  168: 'redbone',\n  169: 'borzoi, Russian wolfhound',\n  170: 'Irish wolfhound',\n  171: 'Italian greyhound',\n  172: 'whippet',\n  173: 'Ibizan hound, Ibizan Podenco',\n  174: 'Norwegian elkhound, elkhound',\n  175: 'otterhound, otter hound',\n  176: 'Saluki, gazelle hound',\n  177: 'Scottish deerhound, deerhound',\n  178: 'Weimaraner',\n  179: 'Staffordshire bullterrier, Staffordshire bull terrier',\n  180: 'American Staffordshire terrier, Staffordshire terrier, American pit bull terrier, pit bull terrier',\n  181: 'Bedlington terrier',\n  182: 'Border terrier',\n  183: 'Kerry blue terrier',\n  184: 'Irish terrier',\n  185: 'Norfolk terrier',\n  186: 'Norwich terrier',\n  187: 'Yorkshire terrier',\n  188: 'wire-haired fox terrier',\n  189: 'Lakeland terrier',\n  190: 'Sealyham terrier, Sealyham',\n  191: 'Airedale, Airedale terrier',\n  192: 'cairn, cairn terrier',\n  193: 'Australian terrier',\n  194: 'Dandie Dinmont, Dandie Dinmont terrier',\n  195: 'Boston bull, Boston terrier',\n  196: 'miniature schnauzer',\n  197: 'giant schnauzer',\n  198: 'standard schnauzer',\n  199: 'Scotch terrier, Scottish terrier, Scottie',\n  200: 'Tibetan terrier, chrysanthemum dog',\n  201: 'silky terrier, Sydney silky',\n  202: 'soft-coated wheaten terrier',\n  203: 'West Highland white terrier',\n  204: 'Lhasa, Lhasa apso',\n  205: 'flat-coated retriever',\n  206: 'curly-coated retriever',\n  207: 'golden retriever',\n  208: 'Labrador retriever',\n  209: 'Chesapeake Bay retriever',\n  210: 'German short-haired pointer',\n  211: 'vizsla, Hungarian pointer',\n  212: 'English setter',\n  213: 'Irish setter, red setter',\n  214: 'Gordon setter',\n  215: 'Brittany spaniel',\n  216: 'clumber, clumber spaniel',\n  217: 'English springer, English springer spaniel',\n  218: 'Welsh springer spaniel',\n  219: 'cocker spaniel, English cocker spaniel, cocker',\n  220: 'Sussex spaniel',\n  221: 'Irish water spaniel',\n  222: 'kuvasz',\n  223: 'schipperke',\n  224: 'groenendael',\n  225: 'malinois',\n  226: 'briard',\n  227: 'kelpie',\n  228: 'komondor',\n  229: 'Old English sheepdog, bobtail',\n  230: 'Shetland sheepdog, Shetland sheep dog, Shetland',\n  231: 'collie',\n  232: 'Border collie',\n  233: 'Bouvier des Flandres, Bouviers des Flandres',\n  234: 'Rottweiler',\n  235: 'German shepherd, German shepherd dog, German police dog, alsatian',\n  236: 'Doberman, Doberman pinscher',\n  237: 'miniature pinscher',\n  238: 'Greater Swiss Mountain dog',\n  239: 'Bernese mountain dog',\n  240: 'Appenzeller',\n  241: 'EntleBucher',\n  242: 'boxer',\n  243: 'bull mastiff',\n  244: 'Tibetan mastiff',\n  245: 'French bulldog',\n  246: 'Great Dane',\n  247: 'Saint Bernard, St Bernard',\n  248: 'Eskimo dog, husky',\n  249: 'malamute, malemute, Alaskan malamute',\n  250: 'Siberian husky',\n  251: 'dalmatian, coach dog, carriage dog',\n  252: 'affenpinscher, monkey pinscher, monkey dog',\n  253: 'basenji',\n  254: 'pug, pug-dog',\n  255: 'Leonberg',\n  256: 'Newfoundland, Newfoundland dog',\n  257: 'Great Pyrenees',\n  258: 'Samoyed, Samoyede',\n  259: 'Pomeranian',\n  260: 'chow, chow chow',\n  261: 'keeshond',\n  262: 'Brabancon griffon',\n  263: 'Pembroke, Pembroke Welsh corgi',\n  264: 'Cardigan, Cardigan Welsh corgi',\n  265: 'toy poodle',\n  266: 'miniature poodle',\n  267: 'standard poodle',\n  268: 'Mexican hairless',\n  269: 'timber wolf, grey wolf, gray wolf, Canis lupus',\n  270: 'white wolf, Arctic wolf, Canis lupus tundrarum',\n  271: 'red wolf, maned wolf, Canis rufus, Canis niger',\n  272: 'coyote, prairie wolf, brush wolf, Canis latrans',\n  273: 'dingo, warrigal, warragal, Canis dingo',\n  274: 'dhole, Cuon alpinus',\n  275: 'African hunting dog, hyena dog, Cape hunting dog, Lycaon pictus',\n  276: 'hyena, hyaena',\n  277: 'red fox, Vulpes vulpes',\n  278: 'kit fox, Vulpes macrotis',\n  279: 'Arctic fox, white fox, Alopex lagopus',\n  280: 'grey fox, gray fox, Urocyon cinereoargenteus',\n  281: 'tabby, tabby cat',\n  282: 'tiger cat',\n  283: 'Persian cat',\n  284: 'Siamese cat, Siamese',\n  285: 'Egyptian cat',\n  286: 'cougar, puma, catamount, mountain lion, painter, panther, Felis concolor',\n  287: 'lynx, catamount',\n  288: 'leopard, Panthera pardus',\n  289: 'snow leopard, ounce, Panthera uncia',\n  290: 'jaguar, panther, Panthera onca, Felis onca',\n  291: 'lion, king of beasts, Panthera leo',\n  292: 'tiger, Panthera tigris',\n  293: 'cheetah, chetah, Acinonyx jubatus',\n  294: 'brown bear, bruin, Ursus arctos',\n  295: 'American black bear, black bear, Ursus americanus, Euarctos americanus',\n  296: 'ice bear, polar bear, Ursus Maritimus, Thalarctos maritimus',\n  297: 'sloth bear, Melursus ursinus, Ursus ursinus',\n  298: 'mongoose',\n  299: 'meerkat, mierkat',\n  300: 'tiger beetle',\n  301: 'ladybug, ladybeetle, lady beetle, ladybird, ladybird beetle',\n  302: 'ground beetle, carabid beetle',\n  303: 'long-horned beetle, longicorn, longicorn beetle',\n  304: 'leaf beetle, chrysomelid',\n  305: 'dung beetle',\n  306: 'rhinoceros beetle',\n  307: 'weevil',\n  308: 'fly',\n  309: 'bee',\n  310: 'ant, emmet, pismire',\n  311: 'grasshopper, hopper',\n  312: 'cricket',\n  313: 'walking stick, walkingstick, stick insect',\n  314: 'cockroach, roach',\n  315: 'mantis, mantid',\n  316: 'cicada, cicala',\n  317: 'leafhopper',\n  318: 'lacewing, lacewing fly',\n  319: \"dragonfly, darning needle, devil's darning needle, sewing needle, snake feeder, snake doctor, mosquito hawk, skeeter hawk\",\n  320: 'damselfly',\n  321: 'admiral',\n  322: 'ringlet, ringlet butterfly',\n  323: 'monarch, monarch butterfly, milkweed butterfly, Danaus plexippus',\n  324: 'cabbage butterfly',\n  325: 'sulphur butterfly, sulfur butterfly',\n  326: 'lycaenid, lycaenid butterfly',\n  327: 'starfish, sea star',\n  328: 'sea urchin',\n  329: 'sea cucumber, holothurian',\n  330: 'wood rabbit, cottontail, cottontail rabbit',\n  331: 'hare',\n  332: 'Angora, Angora rabbit',\n  333: 'hamster',\n  334: 'porcupine, hedgehog',\n  335: 'fox squirrel, eastern fox squirrel, Sciurus niger',\n  336: 'marmot',\n  337: 'beaver',\n  338: 'guinea pig, Cavia cobaya',\n  339: 'sorrel',\n  340: 'zebra',\n  341: 'hog, pig, grunter, squealer, Sus scrofa',\n  342: 'wild boar, boar, Sus scrofa',\n  343: 'warthog',\n  344: 'hippopotamus, hippo, river horse, Hippopotamus amphibius',\n  345: 'ox',\n  346: 'water buffalo, water ox, Asiatic buffalo, Bubalus bubalis',\n  347: 'bison',\n  348: 'ram, tup',\n  349: 'bighorn, bighorn sheep, cimarron, Rocky Mountain bighorn, Rocky Mountain sheep, Ovis canadensis',\n  350: 'ibex, Capra ibex',\n  351: 'hartebeest',\n  352: 'impala, Aepyceros melampus',\n  353: 'gazelle',\n  354: 'Arabian camel, dromedary, Camelus dromedarius',\n  355: 'llama',\n  356: 'weasel',\n  357: 'mink',\n  358: 'polecat, fitch, foulmart, foumart, Mustela putorius',\n  359: 'black-footed ferret, ferret, Mustela nigripes',\n  360: 'otter',\n  361: 'skunk, polecat, wood pussy',\n  362: 'badger',\n  363: 'armadillo',\n  364: 'three-toed sloth, ai, Bradypus tridactylus',\n  365: 'orangutan, orang, orangutang, Pongo pygmaeus',\n  366: 'gorilla, Gorilla gorilla',\n  367: 'chimpanzee, chimp, Pan troglodytes',\n  368: 'gibbon, Hylobates lar',\n  369: 'siamang, Hylobates syndactylus, Symphalangus syndactylus',\n  370: 'guenon, guenon monkey',\n  371: 'patas, hussar monkey, Erythrocebus patas',\n  372: 'baboon',\n  373: 'macaque',\n  374: 'langur',\n  375: 'colobus, colobus monkey',\n  376: 'proboscis monkey, Nasalis larvatus',\n  377: 'marmoset',\n  378: 'capuchin, ringtail, Cebus capucinus',\n  379: 'howler monkey, howler',\n  380: 'titi, titi monkey',\n  381: 'spider monkey, Ateles geoffroyi',\n  382: 'squirrel monkey, Saimiri sciureus',\n  383: 'Madagascar cat, ring-tailed lemur, Lemur catta',\n  384: 'indri, indris, Indri indri, Indri brevicaudatus',\n  385: 'Indian elephant, Elephas maximus',\n  386: 'African elephant, Loxodonta africana',\n  387: 'lesser panda, red panda, panda, bear cat, cat bear, Ailurus fulgens',\n  388: 'giant panda, panda, panda bear, coon bear, Ailuropoda melanoleuca',\n  389: 'barracouta, snoek',\n  390: 'eel',\n  391: 'coho, cohoe, coho salmon, blue jack, silver salmon, Oncorhynchus kisutch',\n  392: 'rock beauty, Holocanthus tricolor',\n  393: 'anemone fish',\n  394: 'sturgeon',\n  395: 'gar, garfish, garpike, billfish, Lepisosteus osseus',\n  396: 'lionfish',\n  397: 'puffer, pufferfish, blowfish, globefish',\n  398: 'abacus',\n  399: 'abaya',\n  400: \"academic gown, academic robe, judge's robe\",\n  401: 'accordion, piano accordion, squeeze box',\n  402: 'acoustic guitar',\n  403: 'aircraft carrier, carrier, flattop, attack aircraft carrier',\n  404: 'airliner',\n  405: 'airship, dirigible',\n  406: 'altar',\n  407: 'ambulance',\n  408: 'amphibian, amphibious vehicle',\n  409: 'analog clock',\n  410: 'apiary, bee house',\n  411: 'apron',\n  412: 'ashcan, trash can, garbage can, wastebin, ash bin, ash-bin, ashbin, dustbin, trash barrel, trash bin',\n  413: 'assault rifle, assault gun',\n  414: 'backpack, back pack, knapsack, packsack, rucksack, haversack',\n  415: 'bakery, bakeshop, bakehouse',\n  416: 'balance beam, beam',\n  417: 'balloon',\n  418: 'ballpoint, ballpoint pen, ballpen, Biro',\n  419: 'Band Aid',\n  420: 'banjo',\n  421: 'bannister, banister, balustrade, balusters, handrail',\n  422: 'barbell',\n  423: 'barber chair',\n  424: 'barbershop',\n  425: 'barn',\n  426: 'barometer',\n  427: 'barrel, cask',\n  428: 'barrow, garden cart, lawn cart, wheelbarrow',\n  429: 'baseball',\n  430: 'basketball',\n  431: 'bassinet',\n  432: 'bassoon',\n  433: 'bathing cap, swimming cap',\n  434: 'bath towel',\n  435: 'bathtub, bathing tub, bath, tub',\n  436: 'beach wagon, station wagon, wagon, estate car, beach waggon, station waggon, waggon',\n  437: 'beacon, lighthouse, beacon light, pharos',\n  438: 'beaker',\n  439: 'bearskin, busby, shako',\n  440: 'beer bottle',\n  441: 'beer glass',\n  442: 'bell cote, bell cot',\n  443: 'bib',\n  444: 'bicycle-built-for-two, tandem bicycle, tandem',\n  445: 'bikini, two-piece',\n  446: 'binder, ring-binder',\n  447: 'binoculars, field glasses, opera glasses',\n  448: 'birdhouse',\n  449: 'boathouse',\n  450: 'bobsled, bobsleigh, bob',\n  451: 'bolo tie, bolo, bola tie, bola',\n  452: 'bonnet, poke bonnet',\n  453: 'bookcase',\n  454: 'bookshop, bookstore, bookstall',\n  455: 'bottlecap',\n  456: 'bow',\n  457: 'bow tie, bow-tie, bowtie',\n  458: 'brass, memorial tablet, plaque',\n  459: 'brassiere, bra, bandeau',\n  460: 'breakwater, groin, groyne, mole, bulwark, seawall, jetty',\n  461: 'breastplate, aegis, egis',\n  462: 'broom',\n  463: 'bucket, pail',\n  464: 'buckle',\n  465: 'bulletproof vest',\n  466: 'bullet train, bullet',\n  467: 'butcher shop, meat market',\n  468: 'cab, hack, taxi, taxicab',\n  469: 'caldron, cauldron',\n  470: 'candle, taper, wax light',\n  471: 'cannon',\n  472: 'canoe',\n  473: 'can opener, tin opener',\n  474: 'cardigan',\n  475: 'car mirror',\n  476: 'carousel, carrousel, merry-go-round, roundabout, whirligig',\n  477: \"carpenter's kit, tool kit\",\n  478: 'carton',\n  479: 'car wheel',\n  480: 'cash machine, cash dispenser, automated teller machine, automatic teller machine, automated teller, automatic teller, ATM',\n  481: 'cassette',\n  482: 'cassette player',\n  483: 'castle',\n  484: 'catamaran',\n  485: 'CD player',\n  486: 'cello, violoncello',\n  487: 'cellular telephone, cellular phone, cellphone, cell, mobile phone',\n  488: 'chain',\n  489: 'chainlink fence',\n  490: 'chain mail, ring mail, mail, chain armor, chain armour, ring armor, ring armour',\n  491: 'chain saw, chainsaw',\n  492: 'chest',\n  493: 'chiffonier, commode',\n  494: 'chime, bell, gong',\n  495: 'china cabinet, china closet',\n  496: 'Christmas stocking',\n  497: 'church, church building',\n  498: 'cinema, movie theater, movie theatre, movie house, picture palace',\n  499: 'cleaver, meat cleaver, chopper',\n  500: 'cliff dwelling',\n  501: 'cloak',\n  502: 'clog, geta, patten, sabot',\n  503: 'cocktail shaker',\n  504: 'coffee mug',\n  505: 'coffeepot',\n  506: 'coil, spiral, volute, whorl, helix',\n  507: 'combination lock',\n  508: 'computer keyboard, keypad',\n  509: 'confectionery, confectionary, candy store',\n  510: 'container ship, containership, container vessel',\n  511: 'convertible',\n  512: 'corkscrew, bottle screw',\n  513: 'cornet, horn, trumpet, trump',\n  514: 'cowboy boot',\n  515: 'cowboy hat, ten-gallon hat',\n  516: 'cradle',\n  517: 'crane',\n  518: 'crash helmet',\n  519: 'crate',\n  520: 'crib, cot',\n  521: 'Crock Pot',\n  522: 'croquet ball',\n  523: 'crutch',\n  524: 'cuirass',\n  525: 'dam, dike, dyke',\n  526: 'desk',\n  527: 'desktop computer',\n  528: 'dial telephone, dial phone',\n  529: 'diaper, nappy, napkin',\n  530: 'digital clock',\n  531: 'digital watch',\n  532: 'dining table, board',\n  533: 'dishrag, dishcloth',\n  534: 'dishwasher, dish washer, dishwashing machine',\n  535: 'disk brake, disc brake',\n  536: 'dock, dockage, docking facility',\n  537: 'dogsled, dog sled, dog sleigh',\n  538: 'dome',\n  539: 'doormat, welcome mat',\n  540: 'drilling platform, offshore rig',\n  541: 'drum, membranophone, tympan',\n  542: 'drumstick',\n  543: 'dumbbell',\n  544: 'Dutch oven',\n  545: 'electric fan, blower',\n  546: 'electric guitar',\n  547: 'electric locomotive',\n  548: 'entertainment center',\n  549: 'envelope',\n  550: 'espresso maker',\n  551: 'face powder',\n  552: 'feather boa, boa',\n  553: 'file, file cabinet, filing cabinet',\n  554: 'fireboat',\n  555: 'fire engine, fire truck',\n  556: 'fire screen, fireguard',\n  557: 'flagpole, flagstaff',\n  558: 'flute, transverse flute',\n  559: 'folding chair',\n  560: 'football helmet',\n  561: 'forklift',\n  562: 'fountain',\n  563: 'fountain pen',\n  564: 'four-poster',\n  565: 'freight car',\n  566: 'French horn, horn',\n  567: 'frying pan, frypan, skillet',\n  568: 'fur coat',\n  569: 'garbage truck, dustcart',\n  570: 'gasmask, respirator, gas helmet',\n  571: 'gas pump, gasoline pump, petrol pump, island dispenser',\n  572: 'goblet',\n  573: 'go-kart',\n  574: 'golf ball',\n  575: 'golfcart, golf cart',\n  576: 'gondola',\n  577: 'gong, tam-tam',\n  578: 'gown',\n  579: 'grand piano, grand',\n  580: 'greenhouse, nursery, glasshouse',\n  581: 'grille, radiator grille',\n  582: 'grocery store, grocery, food market, market',\n  583: 'guillotine',\n  584: 'hair slide',\n  585: 'hair spray',\n  586: 'half track',\n  587: 'hammer',\n  588: 'hamper',\n  589: 'hand blower, blow dryer, blow drier, hair dryer, hair drier',\n  590: 'hand-held computer, hand-held microcomputer',\n  591: 'handkerchief, hankie, hanky, hankey',\n  592: 'hard disc, hard disk, fixed disk',\n  593: 'harmonica, mouth organ, harp, mouth harp',\n  594: 'harp',\n  595: 'harvester, reaper',\n  596: 'hatchet',\n  597: 'holster',\n  598: 'home theater, home theatre',\n  599: 'honeycomb',\n  600: 'hook, claw',\n  601: 'hoopskirt, crinoline',\n  602: 'horizontal bar, high bar',\n  603: 'horse cart, horse-cart',\n  604: 'hourglass',\n  605: 'iPod',\n  606: 'iron, smoothing iron',\n  607: \"jack-o'-lantern\",\n  608: 'jean, blue jean, denim',\n  609: 'jeep, landrover',\n  610: 'jersey, T-shirt, tee shirt',\n  611: 'jigsaw puzzle',\n  612: 'jinrikisha, ricksha, rickshaw',\n  613: 'joystick',\n  614: 'kimono',\n  615: 'knee pad',\n  616: 'knot',\n  617: 'lab coat, laboratory coat',\n  618: 'ladle',\n  619: 'lampshade, lamp shade',\n  620: 'laptop, laptop computer',\n  621: 'lawn mower, mower',\n  622: 'lens cap, lens cover',\n  623: 'letter opener, paper knife, paperknife',\n  624: 'library',\n  625: 'lifeboat',\n  626: 'lighter, light, igniter, ignitor',\n  627: 'limousine, limo',\n  628: 'liner, ocean liner',\n  629: 'lipstick, lip rouge',\n  630: 'Loafer',\n  631: 'lotion',\n  632: 'loudspeaker, speaker, speaker unit, loudspeaker system, speaker system',\n  633: \"loupe, jeweler's loupe\",\n  634: 'lumbermill, sawmill',\n  635: 'magnetic compass',\n  636: 'mailbag, postbag',\n  637: 'mailbox, letter box',\n  638: 'maillot',\n  639: 'maillot, tank suit',\n  640: 'manhole cover',\n  641: 'maraca',\n  642: 'marimba, xylophone',\n  643: 'mask',\n  644: 'matchstick',\n  645: 'maypole',\n  646: 'maze, labyrinth',\n  647: 'measuring cup',\n  648: 'medicine chest, medicine cabinet',\n  649: 'megalith, megalithic structure',\n  650: 'microphone, mike',\n  651: 'microwave, microwave oven',\n  652: 'military uniform',\n  653: 'milk can',\n  654: 'minibus',\n  655: 'miniskirt, mini',\n  656: 'minivan',\n  657: 'missile',\n  658: 'mitten',\n  659: 'mixing bowl',\n  660: 'mobile home, manufactured home',\n  661: 'Model T',\n  662: 'modem',\n  663: 'monastery',\n  664: 'monitor',\n  665: 'moped',\n  666: 'mortar',\n  667: 'mortarboard',\n  668: 'mosque',\n  669: 'mosquito net',\n  670: 'motor scooter, scooter',\n  671: 'mountain bike, all-terrain bike, off-roader',\n  672: 'mountain tent',\n  673: 'mouse, computer mouse',\n  674: 'mousetrap',\n  675: 'moving van',\n  676: 'muzzle',\n  677: 'nail',\n  678: 'neck brace',\n  679: 'necklace',\n  680: 'nipple',\n  681: 'notebook, notebook computer',\n  682: 'obelisk',\n  683: 'oboe, hautboy, hautbois',\n  684: 'ocarina, sweet potato',\n  685: 'odometer, hodometer, mileometer, milometer',\n  686: 'oil filter',\n  687: 'organ, pipe organ',\n  688: 'oscilloscope, scope, cathode-ray oscilloscope, CRO',\n  689: 'overskirt',\n  690: 'oxcart',\n  691: 'oxygen mask',\n  692: 'packet',\n  693: 'paddle, boat paddle',\n  694: 'paddlewheel, paddle wheel',\n  695: 'padlock',\n  696: 'paintbrush',\n  697: \"pajama, pyjama, pj's, jammies\",\n  698: 'palace',\n  699: 'panpipe, pandean pipe, syrinx',\n  700: 'paper towel',\n  701: 'parachute, chute',\n  702: 'parallel bars, bars',\n  703: 'park bench',\n  704: 'parking meter',\n  705: 'passenger car, coach, carriage',\n  706: 'patio, terrace',\n  707: 'pay-phone, pay-station',\n  708: 'pedestal, plinth, footstall',\n  709: 'pencil box, pencil case',\n  710: 'pencil sharpener',\n  711: 'perfume, essence',\n  712: 'Petri dish',\n  713: 'photocopier',\n  714: 'pick, plectrum, plectron',\n  715: 'pickelhaube',\n  716: 'picket fence, paling',\n  717: 'pickup, pickup truck',\n  718: 'pier',\n  719: 'piggy bank, penny bank',\n  720: 'pill bottle',\n  721: 'pillow',\n  722: 'ping-pong ball',\n  723: 'pinwheel',\n  724: 'pirate, pirate ship',\n  725: 'pitcher, ewer',\n  726: \"plane, carpenter's plane, woodworking plane\",\n  727: 'planetarium',\n  728: 'plastic bag',\n  729: 'plate rack',\n  730: 'plow, plough',\n  731: \"plunger, plumber's helper\",\n  732: 'Polaroid camera, Polaroid Land camera',\n  733: 'pole',\n  734: 'police van, police wagon, paddy wagon, patrol wagon, wagon, black Maria',\n  735: 'poncho',\n  736: 'pool table, billiard table, snooker table',\n  737: 'pop bottle, soda bottle',\n  738: 'pot, flowerpot',\n  739: \"potter's wheel\",\n  740: 'power drill',\n  741: 'prayer rug, prayer mat',\n  742: 'printer',\n  743: 'prison, prison house',\n  744: 'projectile, missile',\n  745: 'projector',\n  746: 'puck, hockey puck',\n  747: 'punching bag, punch bag, punching ball, punchball',\n  748: 'purse',\n  749: 'quill, quill pen',\n  750: 'quilt, comforter, comfort, puff',\n  751: 'racer, race car, racing car',\n  752: 'racket, racquet',\n  753: 'radiator',\n  754: 'radio, wireless',\n  755: 'radio telescope, radio reflector',\n  756: 'rain barrel',\n  757: 'recreational vehicle, RV, R.V.',\n  758: 'reel',\n  759: 'reflex camera',\n  760: 'refrigerator, icebox',\n  761: 'remote control, remote',\n  762: 'restaurant, eating house, eating place, eatery',\n  763: 'revolver, six-gun, six-shooter',\n  764: 'rifle',\n  765: 'rocking chair, rocker',\n  766: 'rotisserie',\n  767: 'rubber eraser, rubber, pencil eraser',\n  768: 'rugby ball',\n  769: 'rule, ruler',\n  770: 'running shoe',\n  771: 'safe',\n  772: 'safety pin',\n  773: 'saltshaker, salt shaker',\n  774: 'sandal',\n  775: 'sarong',\n  776: 'sax, saxophone',\n  777: 'scabbard',\n  778: 'scale, weighing machine',\n  779: 'school bus',\n  780: 'schooner',\n  781: 'scoreboard',\n  782: 'screen, CRT screen',\n  783: 'screw',\n  784: 'screwdriver',\n  785: 'seat belt, seatbelt',\n  786: 'sewing machine',\n  787: 'shield, buckler',\n  788: 'shoe shop, shoe-shop, shoe store',\n  789: 'shoji',\n  790: 'shopping basket',\n  791: 'shopping cart',\n  792: 'shovel',\n  793: 'shower cap',\n  794: 'shower curtain',\n  795: 'ski',\n  796: 'ski mask',\n  797: 'sleeping bag',\n  798: 'slide rule, slipstick',\n  799: 'sliding door',\n  800: 'slot, one-armed bandit',\n  801: 'snorkel',\n  802: 'snowmobile',\n  803: 'snowplow, snowplough',\n  804: 'soap dispenser',\n  805: 'soccer ball',\n  806: 'sock',\n  807: 'solar dish, solar collector, solar furnace',\n  808: 'sombrero',\n  809: 'soup bowl',\n  810: 'space bar',\n  811: 'space heater',\n  812: 'space shuttle',\n  813: 'spatula',\n  814: 'speedboat',\n  815: \"spider web, spider's web\",\n  816: 'spindle',\n  817: 'sports car, sport car',\n  818: 'spotlight, spot',\n  819: 'stage',\n  820: 'steam locomotive',\n  821: 'steel arch bridge',\n  822: 'steel drum',\n  823: 'stethoscope',\n  824: 'stole',\n  825: 'stone wall',\n  826: 'stopwatch, stop watch',\n  827: 'stove',\n  828: 'strainer',\n  829: 'streetcar, tram, tramcar, trolley, trolley car',\n  830: 'stretcher',\n  831: 'studio couch, day bed',\n  832: 'stupa, tope',\n  833: 'submarine, pigboat, sub, U-boat',\n  834: 'suit, suit of clothes',\n  835: 'sundial',\n  836: 'sunglass',\n  837: 'sunglasses, dark glasses, shades',\n  838: 'sunscreen, sunblock, sun blocker',\n  839: 'suspension bridge',\n  840: 'swab, swob, mop',\n  841: 'sweatshirt',\n  842: 'swimming trunks, bathing trunks',\n  843: 'swing',\n  844: 'switch, electric switch, electrical switch',\n  845: 'syringe',\n  846: 'table lamp',\n  847: 'tank, army tank, armored combat vehicle, armoured combat vehicle',\n  848: 'tape player',\n  849: 'teapot',\n  850: 'teddy, teddy bear',\n  851: 'television, television system',\n  852: 'tennis ball',\n  853: 'thatch, thatched roof',\n  854: 'theater curtain, theatre curtain',\n  855: 'thimble',\n  856: 'thresher, thrasher, threshing machine',\n  857: 'throne',\n  858: 'tile roof',\n  859: 'toaster',\n  860: 'tobacco shop, tobacconist shop, tobacconist',\n  861: 'toilet seat',\n  862: 'torch',\n  863: 'totem pole',\n  864: 'tow truck, tow car, wrecker',\n  865: 'toyshop',\n  866: 'tractor',\n  867: 'trailer truck, tractor trailer, trucking rig, rig, articulated lorry, semi',\n  868: 'tray',\n  869: 'trench coat',\n  870: 'tricycle, trike, velocipede',\n  871: 'trimaran',\n  872: 'tripod',\n  873: 'triumphal arch',\n  874: 'trolleybus, trolley coach, trackless trolley',\n  875: 'trombone',\n  876: 'tub, vat',\n  877: 'turnstile',\n  878: 'typewriter keyboard',\n  879: 'umbrella',\n  880: 'unicycle, monocycle',\n  881: 'upright, upright piano',\n  882: 'vacuum, vacuum cleaner',\n  883: 'vase',\n  884: 'vault',\n  885: 'velvet',\n  886: 'vending machine',\n  887: 'vestment',\n  888: 'viaduct',\n  889: 'violin, fiddle',\n  890: 'volleyball',\n  891: 'waffle iron',\n  892: 'wall clock',\n  893: 'wallet, billfold, notecase, pocketbook',\n  894: 'wardrobe, closet, press',\n  895: 'warplane, military plane',\n  896: 'washbasin, handbasin, washbowl, lavabo, wash-hand basin',\n  897: 'washer, automatic washer, washing machine',\n  898: 'water bottle',\n  899: 'water jug',\n  900: 'water tower',\n  901: 'whiskey jug',\n  902: 'whistle',\n  903: 'wig',\n  904: 'window screen',\n  905: 'window shade',\n  906: 'Windsor tie',\n  907: 'wine bottle',\n  908: 'wing',\n  909: 'wok',\n  910: 'wooden spoon',\n  911: 'wool, woolen, woollen',\n  912: 'worm fence, snake fence, snake-rail fence, Virginia fence',\n  913: 'wreck',\n  914: 'yawl',\n  915: 'yurt',\n  916: 'web site, website, internet site, site',\n  917: 'comic book',\n  918: 'crossword puzzle, crossword',\n  919: 'street sign',\n  920: 'traffic light, traffic signal, stoplight',\n  921: 'book jacket, dust cover, dust jacket, dust wrapper',\n  922: 'menu',\n  923: 'plate',\n  924: 'guacamole',\n  925: 'consomme',\n  926: 'hot pot, hotpot',\n  927: 'trifle',\n  928: 'ice cream, icecream',\n  929: 'ice lolly, lolly, lollipop, popsicle',\n  930: 'French loaf',\n  931: 'bagel, beigel',\n  932: 'pretzel',\n  933: 'cheeseburger',\n  934: 'hotdog, hot dog, red hot',\n  935: 'mashed potato',\n  936: 'head cabbage',\n  937: 'broccoli',\n  938: 'cauliflower',\n  939: 'zucchini, courgette',\n  940: 'spaghetti squash',\n  941: 'acorn squash',\n  942: 'butternut squash',\n  943: 'cucumber, cuke',\n  944: 'artichoke, globe artichoke',\n  945: 'bell pepper',\n  946: 'cardoon',\n  947: 'mushroom',\n  948: 'Granny Smith',\n  949: 'strawberry',\n  950: 'orange',\n  951: 'lemon',\n  952: 'fig',\n  953: 'pineapple, ananas',\n  954: 'banana',\n  955: 'jackfruit, jak, jack',\n  956: 'custard apple',\n  957: 'pomegranate',\n  958: 'hay',\n  959: 'carbonara',\n  960: 'chocolate sauce, chocolate syrup',\n  961: 'dough',\n  962: 'meat loaf, meatloaf',\n  963: 'pizza, pizza pie',\n  964: 'potpie',\n  965: 'burrito',\n  966: 'red wine',\n  967: 'espresso',\n  968: 'cup',\n  969: 'eggnog',\n  970: 'alp',\n  971: 'bubble',\n  972: 'cliff, drop, drop-off',\n  973: 'coral reef',\n  974: 'geyser',\n  975: 'lakeside, lakeshore',\n  976: 'promontory, headland, head, foreland',\n  977: 'sandbar, sand bar',\n  978: 'seashore, coast, seacoast, sea-coast',\n  979: 'valley, vale',\n  980: 'volcano',\n  981: 'ballplayer, baseball player',\n  982: 'groom, bridegroom',\n  983: 'scuba diver',\n  984: 'rapeseed',\n  985: 'daisy',\n  986: \"yellow lady's slipper, yellow lady-slipper, Cypripedium calceolus, Cypripedium parviflorum\",\n  987: 'corn',\n  988: 'acorn',\n  989: 'hip, rose hip, rosehip',\n  990: 'buckeye, horse chestnut, conker',\n  991: 'coral fungus',\n  992: 'agaric',\n  993: 'gyromitra',\n  994: 'stinkhorn, carrion fungus',\n  995: 'earthstar',\n  996: 'hen-of-the-woods, hen of the woods, Polyporus frondosus, Grifola frondosa',\n  997: 'bolete',\n  998: 'ear, spike, capitulum',\n  999: 'toilet tissue, toilet paper, bathroom tissue'\n}","import React, { Component } from 'react';\nimport * as tf from '@tensorflow/tfjs';\nimport { Select, message, Button, Spin, Icon } from 'antd';\n\nimport { imageNetClasses } from '../../models/imagenet';\nimport { Props, State, MappedResult } from './ImageClassification.types';\n\nconst MobileNet = 'mobilenet';\n\nexport class ImageClassification extends Component<Props, State> {\n  state: State = {\n    selectedModel: MobileNet,\n    file: null,\n    results: [],\n    loading: false\n  };\n  model: any = null;\n  pickedImage: any = null;\n\n  componentDidMount = () => {\n    this.onLoadModel();\n  };\n\n  preprocessImage() {\n    const tensor = tf.fromPixels(this.pickedImage).resizeNearestNeighbor([224, 224]).toFloat();\n\n    const offset = tf.scalar(127.5);\n    return tensor.sub(offset).div(offset).expandDims();\n  };\n\n  onLoadModel = async () => {\n    this.setState({ loading: true });\n\n    this.model = await tf.loadModel('https://raw.githubusercontent.com/UlyJsi/tensorflowjs-react/master/src/models/mobilenet/model.json');\n\n    this.setState({ loading: false });\n    console.log('Model is loaded !')\n  };\n\n  onUploadImg = (event: any) => {\n    this.setState({ results: [] });\n    this.setState({\n      file: URL.createObjectURL(event.target.files[0])\n    });\n\n    this.pickedImage = document.getElementById('picked-img');\n    message.success(`File uploaded successfully`);\n  };\n\n  onPredictClick = async () => {\n    let tensor = this.preprocessImage();\n    const prediction = await this.model.predict(tensor).data();\n\n    // structuring data helpers - START\n    const mapClassesToResults = (prediction: number[]) => {\n      return Array.from(prediction).map((p, index) => {\n        return {\n          probability: p,\n          // @ts-ignore\n          className: imageNetClasses[index]\n        };\n      });\n    }\n\n    const descSortResults = (prediction: MappedResult[]) => {\n      return prediction.sort((a: MappedResult, b: MappedResult) => {\n        return b.probability - a.probability;\n      });\n    };\n\n    const getMostProbableResults = (prediction: MappedResult[]) => {\n      return prediction.slice(0, 5);\n    };\n    // structuring data helpers - END\n\n    const mappedPredictionResults = mapClassesToResults(prediction);\n    const sortedPredictionResults = descSortResults(mappedPredictionResults);\n    const mostProbableResults = getMostProbableResults(sortedPredictionResults);\n\n    this.setState({ results: mostProbableResults });\n  };\n\n  // UI STUFF\n  renderResultsInformation = () => {\n    return (\n      <ul className=\"results-info\">\n        {this.state.results.map((result: MappedResult) =>\n          <li key={result.probability}>probability: <span className=\"red-font\">{result.probability.toFixed(2)}</span>, name: <span className=\"red-font\">{result.className.toLocaleUpperCase()}</span></li>\n        )}\n      </ul>\n    )\n  };\n\n  render() {\n    const { file, selectedModel, loading } = this.state;\n\n    if (loading) return <Spin className=\"m\" size='large' indicator={<Icon type='loading' />} />;\n\n    return (\n      <div className=\"image-classification\">\n        <div className=\"box\">\n          <Select value={selectedModel} style={{ marginRight: 12 }} disabled={true}>\n            <Select.Option key={MobileNet} value={MobileNet}>MobileNet</Select.Option>\n          </Select>\n          <input type=\"file\" onChange={this.onUploadImg}/>\n          <Button type=\"danger\" disabled={!file} onClick={this.onPredictClick}>Predict</Button>\n        </div>\n        <div className=\"flex box\">\n          <img id=\"picked-img\" src={file} alt=\"\" />\n          {file && this.renderResultsInformation()}\n        </div>\n      </div>\n    );\n  }\n};","import React, { Component } from 'react';\nimport { Layout, Menu, Spin, Icon } from 'antd';\nimport * as p5Lib from 'p5';\nimport * as ml5 from 'ml5';\nimport Sketch from 'react-p5';\nimport { TransferLearning } from './Components/TransferLearning/TransferLearning';\nimport { ImageClassification } from './Components/ImageClassification/ImageClassification';\n\nimport { State, MlModels, ModelsDict, ODResults } from './App.types';\n\nconst MODELS: ModelsDict = {\n  imageClassification: 'imageClassification',\n  objectDetection: 'objectDetection',\n  transferLearning: 'transferLearning'\n};\n\nconst { Header, Content, Footer } = Layout;\nconst p5 = new p5Lib();\n\nclass MainApp extends Component {\n  state: State = {\n    loading: false,\n    selectedModel: null\n  };\n\n  width: number = 1000;\n  height: number = 700;\n  mobilenet: any = null;\n  classifier: any = null;\n  objects: ODResults = [];\n  video: any = null;\n  trainingClassNum: number = 3;\n  tlLabel: string | null = null;\n  model: any = null;\n\n  setup = () => {\n    const { selectedModel } = this.state;\n\n    if (selectedModel === MODELS.imageClassification) {\n      this.video = null;\n      p5.remove();\n\n      return;\n    }\n\n    if (this.video === null) {\n      p5.createCanvas(this.width, this.height)\n        .parent('main-wrapper')\n        .id('main-canvas');\n      this.video = p5.createCapture(p5.VIDEO).parent('main-wrapper');\n    }\n\n    if (selectedModel === MODELS.objectDetection) {\n      this.model = ml5.YOLO(this.video, this.onObjectDetect);\n      this.setState({ loading: true });\n    }\n\n    if (selectedModel === MODELS.transferLearning) {\n      this.model = 'MobileNet';\n      this.mobilenet = ml5.featureExtractor(\n        this.model,\n        { numLabels: this.trainingClassNum },\n        this.onTLModelReady\n      );\n      this.classifier = this.mobilenet.classification(this.video);\n    }\n  };\n\n  // UI STUFF\n  draw = () => {\n    const { selectedModel } = this.state;\n\n    if (selectedModel === MODELS.imageClassification) return;\n\n    if (selectedModel === MODELS.objectDetection) {\n      this.drawODLabel();\n    }\n\n    if (selectedModel === MODELS.transferLearning) {\n      this.drawTLLabel();\n    }\n  };\n\n  // UI STUFF\n  drawODLabel = () => {\n    p5.image(this.video, 0, 0, this.width, this.height);\n\n    for (let i = 0; i < this.objects.length; i++) {\n      const label = String(this.objects[i].label).toUpperCase();\n\n      const xTextPosition = this.objects[i].x * this.width;\n      const yTextPosition = this.objects[i].y * this.height - 5;\n\n      const rectX = this.objects[i].x * this.width;\n      const rectY = this.objects[i].y * this.height;\n      const rectWidth = this.objects[i].w * this.width;\n      const rectHeight = this.objects[i].h * this.height;\n\n      p5.fill(11, 104, 255);\n      p5.noStroke();\n      p5.text(label, xTextPosition, yTextPosition);\n      p5.noFill();\n      p5.strokeWeight(4);\n      p5.textSize(42);\n      p5.stroke(11, 104, 255);\n      p5.rect(rectX, rectY, rectWidth, rectHeight);\n    }\n  };\n\n  // UI STUFF\n  drawTLLabel = () => {\n    const x = 100,\n      y = 100;\n\n    p5.image(this.video, 0, 0, this.width, this.height);\n    p5.fill(11, 104, 255);\n    p5.textSize(42);\n\n    this.tlLabel && p5.text(this.tlLabel, x, y);\n  };\n\n  getTLLabel = (label: string) => {\n    this.tlLabel = label;\n  };\n\n  getModels = (): MlModels => {\n    return {\n      [MODELS.imageClassification]: {\n        label: 'Image classification',\n        component: <ImageClassification />\n      },\n      [MODELS.objectDetection]: {\n        label: 'Object detection',\n        component: <></>\n      },\n      [MODELS.transferLearning]: {\n        label: 'Transfer learning',\n        component: (\n          <TransferLearning\n            p5Lib={p5}\n            classifier={this.classifier}\n            getTLLabel={this.getTLLabel}\n          />\n        )\n      }\n    };\n  };\n\n  onObjectDetect = () => {\n    this.setState({ loading: false });\n    console.log('Object detection model is ready !!!');\n\n    if (this.model && typeof this.model !== 'string') {\n      this.model.detect((err: string, results: ODResults) => {\n        this.objects = results;\n        this.onObjectDetect();\n      });\n    }\n  };\n\n  onModelSelect = ({ key }: { key: string }) => {\n    this.setState({ selectedModel: key }, () => this.setup());\n  };\n\n  onTLModelReady = () => {\n    console.log('Transfer learning model is ready !!!');\n    this.setState({ loading: false });\n  };\n\n  render() {\n    const { selectedModel, loading } = this.state;\n    const models = this.getModels();\n\n    return (\n      <Layout>\n        <Header>\n          <Menu\n            theme='dark'\n            mode='horizontal'\n            onClick={this.onModelSelect}\n            style={{ lineHeight: '64px', textAlign: 'center' }}\n          >\n            {Object.keys(models).map(key => (\n              <Menu.Item key={key}>{models[key].label}</Menu.Item>\n            ))}\n          </Menu>\n        </Header>\n\n        <Content\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            flexDirection: 'column'\n          }}\n          id='main-wrapper'\n        >\n          {loading && (\n            <div className='m'>\n              <Spin size='large' indicator={<Icon type='loading' />} />\n            </div>\n          )}\n\n          {selectedModel ? (\n            <>\n              {models[selectedModel].component}\n              <Sketch setup={this.setup} draw={this.draw} />\n            </>\n          ) : <h1>Select module to start !</h1>}\n        </Content>\n\n        <Footer style={{ textAlign: 'center' }}>Made with fun &#9786;</Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default MainApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport MainApp from './App';\n\nimport './styles/index.css';\n\nReactDOM.render(<MainApp />, document.getElementById('root'));\n"],"sourceRoot":""}